// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"cp36O68kAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
