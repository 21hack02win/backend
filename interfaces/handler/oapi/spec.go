// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9xa63MT1xX/VzS3/ZDMrCX5gdPq21pWbAGWjB5xM4jxXEtX0jrW7rJ7Zdn1aIZdhQzB",
	"zphAC00IBQ8FPFDcpB3aScYhf8xFgD/lX+jcu0/tQw/bKZ3whb2rc84953fP8663QFlqyJKIRKyCxBaQ",
	"oQIbCCOFrRRJaqQraXER4jpdV5BaVgQZC5IIEoB0npHOIek8SM8CDgj0lUwJOSDCBgIJkx1wQEGXm4KC",
	"KiCBlSbigFquowYcJBFvylSKihVBrIF2mwNNFSlUnwtNpGwGsT+m7Pq/SeewWHS0uszIbbWolL5KVSWl",
	"ATGlbAqVAEXaFjEDiRfVFlJyCFY2U+tIxH69unf/+ub5n4h20L36qHv9LtF2ugc7r374jGh3iPaYaJ8S",
	"fZtot4i2T/SbR1e+fnP/EdG+Ivp25D0bEcp949Purb3IWKkZj0+iCNFfsJ9ukM7h+4ADaAM25DVEt4dM",
	"JYoIFfk50Q6Idp1o3xLtS9DmgKxIMlKwgFQ38VYA4A5GFy26SxzAAqb7+C23oZJWVlEZ070MmjwSK/3B",
	"oYZrr37aOzXDnzNEf0nDHaPC7cZQwSGGv3nxgmg7Rw/vEv0W0Z4Q7QuiPf75cMfyFhMHl7EOAhY4BjIe",
	"EIRGDSSA8NFMNteKn5urSTzP85l8sZ4q1ugjW5/jL9D/kmv5apo9zcxVZgrFFM+fn1tMxjbqM/RtcmY1",
	"/+HZDM/PTJ+t8XyNki5S/iQ/zfN8pcDzfFau8dFo1I8v02MQuJTIj6wDWwC0yToUa2heUsOQff3Nle7L",
	"Heo4lm91d++4fas/plf3/ZjWJRWnKyABJqvwd2eq01NjZz4Y/2Bs6sz0xNjKZLU8NlH+/fRkdXoaVuG0",
	"HwqLfXBu6UXH5HMBlK9LLQOkcHwUBDHKSVIjhy43kRqE0O1v3z7etU1+9eM3r6/dIJ2nRP8H0feJ/j3p",
	"XPNE1jrEUAGJMxwoQxmWBbwJElNGSjbz6lmpLgZEmcloO4IgYlRDCqV0JAX96oge5EQ2JWdt55LtAs+P",
	"TAB8swps9clXNGyPm6xKYkm0fnhvNscvkc6fif6EFa0fiLbz5oVO9F2iPWRl4SnRttnzfaJ//n6EaC+J",
	"dv/nwx3KuJwv8LlCpDeB7BJ9+9eTCnrPIeyg+iRYoj8nnYek8y+Kvv79687V7oPvaEXUrh/t7fgPcfRM",
	"C9fWqBKLdaiiTLMBEuNxDlR63kxy7+oQOCBVoBBcCynKDXReaAgYJKbi/qD1GmafndhsrBjhWQkmcAVw",
	"8KlbegX84FLKL8/jLQ6tsZEp1qMX5zPF62F9S80cbKD+LvZPO/CPbm93n2z7O7jRiw01ZF6g+x3n7Bzu",
	"EyJsC3KzueDzgBMA31lJEPvWIQeHXb17/cGwFcgcLBIgA6XJqfjKH8vxlYlJcMJqZEkNgG34UmTPPP6a",
	"5ILOC0wAdhm0gWmxz2OIm2pACf/7HtEOltCKKpU/QZjofyOdr1iyu0bdhSJpYSjSAL1oxUcZiutQpWoZ",
	"fS0l6Gkx6M5LqudQHSyyFSj0qY9h2fVY/Xx4Bgt0+8HHw6hctvYaE3AM9JT6+K1RVHqVdrqaODdi48iB",
	"BqL5VQWJiz0eb0y+w4vxBcIlV9SMIOMEPW//5m7YjpgDG2M1acx8SUmibLRvu6DaAgJGDfbwWwVVQQL8",
	"JuZca8TMWT1WVI2tTVlQUeDmEHF/Ii3DsoMNjr2HDYljmMtPmRuGuGcGtRYYR0hEHnX2u99tE+3Z259+",
	"pEmWZoc9sy3qHBJt5/W9R7TJDLmBGLJ+uTX1aBSidx7hLNNxiOJK9Kekc4fo/yGdJ1R1/ebb/efdg6+d",
	"9HLXyHehWcWtn2fnEP2KcgVi5FHRLcZPECDJO7D9L6ZV1zXIPaJ9RrS/EO0Lot9kA8WX7LaJJlTAARFt",
	"UKdmaXH4CxKLr3+8eSpYyLWKKWu0EZeSJFkdCwOVVUfPBHAa0L6zZr7vSYV12qdwTEZvHXRG7gMIOSNa",
	"Xvu4/bV7Rk03GoYTn40bItf00zcEfFAeBzJulO4jGEwHqQAoWeXqe90d1IecZvswSh994qI56tXP4H67",
	"aFz5+4BdCssfo/TVuWx2YTmTWlpeSC3MpHKAM97kU4Xl7GIhnc1Yb4qLs3wh5XqZulBM5QvLc/xCyrjQ",
	"ARzoWWRn+fRyLsXPfmwtknwmmTpvrT5MZ9L5eWuVT2VmAQec+yFrYUlgC1sCW9kSDC5DAp/JL6Vytgxz",
	"aUkxl7Ycc21LsrgNWfn5rKMNW2RSf7Cfqd7Wc5LPfMTnrZUhhaFUKOYyyxRBwAHKbD0n5/nMXGp5Ppun",
	"8mZyKf6c8ZPr5EMHGepIgliVWKsqiRiWmRuYXj8xXoflT+ITLUGkvqWsgQSoYyyriVisJuB6cyValhox",
	"N1mb8/iQCNUyXIObkfXxCL+YdvUg1i+AA+tIUQ3y8WicZRIZiVCmmWsyGo/SoVaGuM6CLkbbRzW2Kgki",
	"+1Yn9R2pifbMmKoBE6pASsCSgDV9mh/BkIpnpMqmBYQZD1CW14QyY4qtqhLb0flE1i87eofbdtsIWlWW",
	"RNVIHxPx+KltxyxhW/QCkT3HkoXabDSgsgkSYNUxG8OaavXj4BIlM7EVUSsc2sBbcx+6ziXzL4Sv/xb7",
	"/wXhstv0UIy3jCmoTbetITxwumatwe3uyzs+qOcQtnF+17bXbF08hnM9H9UvBm/nkMR6Prq3KX+spYZi",
	"5SpUN4+uaO4eqiSWxK2SGIlEIjT3JSIY1jhjXQIrUmWzBBIRk8B4Ocb+lYDxrl0S2z7Il1QwqkG9X+3Z",
	"TcQxo6K3B1kx2SURZauhirgP0jOXtrnBLJ5RcRgW/1g4iMtzkzqIvPfSahC155Z7KPKhhfu+1w7H4Pqb",
	"gSF3GFqj3mZ6GGr3HDMMvXs2HUTv/VbN4tnoRPozWn1Lu+1rW0OT/YAM9bHUVCJzqUIEiRVZMi/2zVzV",
	"UmmKpuRIWbfiurftgbIQtRqXKFagimG0gtZZQJtiQhO50f64/iyIAReSyXqIWyrF7L8BAAD//8Og2hun",
	"JAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
