openapi: 3.0.3
info:
  title: nascalay
  version: '1.0'
  description: nascalay v1 API
  contact:
    name: 21hack02win
    url: 'https://github.com/21hack02win'
servers:
  - url: 'https://api.nascalay.trasta.dev'
paths:
  /rooms/new:
    post:
      summary: createRoom
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      operationId: createRoom
      parameters: []
      description: 新規ルーム作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
      tags:
        - room
  /rooms/join:
    post:
      summary: joinRoom
      operationId: joinRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      description: ルームに参加
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRoomRequest'
      tags:
        - room
  '/rooms/{roomId}':
    parameters:
      - $ref: '#/components/parameters/roomIdInPath'
    get:
      summary: getRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      operationId: getRoom
      description: ルーム情報を取得
      tags:
        - room
  /ws:
    get:
      summary: Your GET endpoint
      tags:
        - ws
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      type:
                        $ref: '#/components/schemas/WsEvent'
                      body:
                        anyOf:
                          - $ref: '#/components/schemas/WsRoomSetOptionEventBody'
                          - $ref: '#/components/schemas/WsOdaiSendEventBody'
                          - $ref: '#/components/schemas/WsDrawSendEventBody'
                          - $ref: '#/components/schemas/WsAnswerSendEventBody'
                          - type: object
                    required:
                      - type
                type: object
      operationId: ws
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    type:
                      $ref: '#/components/schemas/WsEvent'
                    body:
                      oneOf:
                        - $ref: '#/components/schemas/WsRoomNewMemberEventBody'
                        - $ref: '#/components/schemas/WsRoomUpdateOptionEventBody'
                        - $ref: '#/components/schemas/WsGameStartEventBody'
                        - $ref: '#/components/schemas/WsDrawStartEventBody'
                        - $ref: '#/components/schemas/WsAnswerStartEventBody'
                        - $ref: '#/components/schemas/WsShowOdaiEventBody'
                        - $ref: '#/components/schemas/WsShowCanvasEventBody'
                        - $ref: '#/components/schemas/WsShowAnswerEventBody'
                        - $ref: '#/components/schemas/WsChangeHostEventBody'
                        - type: object
                  required:
                    - type
              type: object
        description: ''
      description: |-
        Websocketを送受信する

        {
            type: tag,
            "body": {
                "------"
            }
        }
      parameters:
        - $ref: '#/components/parameters/userIdInQuery'
components:
  schemas:
    Room:
      title: Room
      type: object
      description: ルーム情報
      example:
        roomId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        capacity: 0
        userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        hostId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        members:
          - username: John
            avatar: 5
            userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      properties:
        roomId:
          type: string
        capacity:
          type: integer
        userId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        hostId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - roomId
        - capacity
        - userId
        - hostId
        - members
    User:
      title: User
      type: object
      description: ユーザー情報
      example:
        username: John
        avatar: 5
        userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      properties:
        userId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        username:
          type: string
        avatar:
          type: integer
      required:
        - userId
        - username
        - avatar
    CreateRoomRequest:
      title: CreateRoomRequest
      type: object
      description: 新規ルーム作成リクエスト
      example:
        username: John
        avatar: 5
        capacity: 4
      properties:
        username:
          type: string
        avatar:
          type: integer
        capacity:
          type: integer
      required:
        - username
        - avatar
        - capacity
    JoinRoomRequest:
      title: JoinRoomRequest
      type: object
      description: ルーム参加リクエスト
      example:
        roomId: Nao340bzc0b23
        username: John
        avatar: 5
      properties:
        roomId:
          type: string
        username:
          type: string
        avatar:
          type: integer
      required:
        - roomId
        - username
        - avatar
    WsEvent:
      title: WsEvent
      type: string
      description: Websocketイベントのリスト
      enum:
        - ROOM_NEW_MEMBER
        - ROOM_SET_OPTION
        - ROOM_UPDATE_OPTION
        - REQUEST_GAME_START
        - GAME_START
        - ODAI_READY
        - ODAI_CANCEL
        - ODAI_FINISH
        - ODAI_SEND
        - DRAW_START
        - DRAW_READY
        - DRAW_CANCEL
        - DRAW_FINISH
        - DRAW_SEND
        - ANSWER_START
        - ANSWER_READY
        - ANSWER_CANCEL
        - ANSWER_FINISH
        - ANSWER_SEND
        - SHOW_START
        - SHOW_NEXT
        - SHOW_ODAI
        - SHOW_CANVAS
        - SHOW_ANSWER
        - RETURN_ROOM
        - NEXT_ROOM
        - CHANGE_HOST
        - BREAK_ROOM
    WsNextShowStatus:
      title: WsNextWsEvent
      type: string
      description: 次のWebsocketイベントのリスト
      enum:
        - odai
        - canvas
        - answer
        - end
    WsRoomNewMemberEventBody:
      title: WsRoomNewMemberEventBody
      type: object
      description: 部屋に追加のメンバーが来たことを通知する (サーバー -> ルーム全員)
      example:
        capacity: 0
        hostId: 70e3fb2d-1cb6-4dbc-ab8d-fa7209aca5dd
        members:
          - username: John
            avatar: 5
            userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      properties:
        capacity:
          type: integer
        hostId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - capacity
        - hostId
        - members
    WsRoomSetOptionEventBody:
      title: WsRoomSetOptionEventBody
      type: object
      description: ゲームのオプションを設定する (ホスト -> サーバー)
      example:
        something: string
      properties:
        something:
          type: string
      required:
        - something
    WsRoomUpdateOptionEventBody:
      title: WsRoomUpdateOptionEventBody
      type: object
      properties:
        something:
          type: string
      required:
        - something
    WsGameStartEventBody:
      title: WsGameStartEventBody
      type: object
      description: ゲームの開始を通知する (サーバー -> ルーム全員)
      example:
        odaiHint: ねこのおばけ
        timeLimit: 40
      properties:
        odaiHint:
          type: string
        timeLimit:
          type: integer
      required:
        - odaiHint
        - timeLimit
    WsOdaiSendEventBody:
      title: WsOdaiSendEventBody
      type: object
      example:
        odai: ねこのおばけ
      description: お題を送信する (ルームの各員 -> サーバー)
      properties:
        odai:
          type: string
      required:
        - odai
    WsDrawStartEventBody:
      title: WsDrawStartEventBody
      type: object
      example:
        timeLimit: 40
        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
        odai: ねこのおばけ
        drawPhaseNum: 3
        allDrawPhaseNum: 10
      description: キャンバス情報とお題を送信する (サーバー -> ルーム各員)
      properties:
        timeLimit:
          type: integer
        img:
          type: string
        odai:
          type: string
        drawPhaseNum:
          type: integer
        allDrawPhaseNum:
          type: number
      required:
        - timeLimit
        - img
        - odai
        - drawPhaseNum
        - allDrawPhaseNum
    WsDrawSendEventBody:
      title: WsDrawSendEventBody
      type: object
      example:
        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
      description: |-
        絵を送信する (ルームの各員 -> サーバー)

        -> (DRAWフェーズが終わってなかったら) また，DRAW_START が飛んでくる
      properties:
        img:
          type: string
      required:
        - img
    WsAnswerStartEventBody:
      title: WsAnswerStartEventBody
      type: object
      description: 絵が飛んできて，回答する (サーバー -> ルーム各員)
      example:
        timeLimit: 40
        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
      properties:
        timeLimit:
          type: integer
        img:
          type: string
      required:
        - timeLimit
        - img
    WsAnswerSendEventBody:
      title: WsAnswerSendEventBody
      type: object
      description: 回答を送信する (ルームの各員 -> サーバー)
      example:
        answer: ねこのおばけ
      properties:
        answer:
          type: string
      required:
        - answer
    WsShowOdaiEventBody:
      title: WsShowOdaiEventBody
      type: object
      description: 最初のお題を受信する (サーバー -> ルーム全員)
      example:
        odai: そうじきをかけるねこ
        next: odai
      properties:
        odai:
          type: string
        next:
          $ref: '#/components/schemas/WsNextShowStatus'
      required:
        - odai
        - next
    WsShowCanvasEventBody:
      title: WsShowCanvasEventBody
      type: object
      example:
        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
        next: odai
      description: 次のキャンバスを受信する (サーバー -> ルーム全員)
      properties:
        img:
          type: string
        next:
          $ref: '#/components/schemas/WsNextShowStatus'
      required:
        - img
        - next
    WsShowAnswerEventBody:
      title: WsShowAnswerEventBody
      type: object
      description: 最後の回答を受信する (サーバー -> ルーム全員)
      example:
        answer: そうじきをかけるねこ
        next: odai
      properties:
        answer:
          type: string
        next:
          $ref: '#/components/schemas/WsNextShowStatus'
      required:
        - answer
        - next
    WsChangeHostEventBody:
      title: WsChangeHostEventBody
      type: object
      description: 最後の回答を受信する (サーバー -> ルーム全員)
      example:
        hostId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      properties:
        hostId:
          type: string
          format: uuid
      required:
        - hostId
  parameters:
    roomIdInPath:
      name: roomId
      in: path
      required: true
      schema:
        type: string
        description: ルームID
      description: ルームID
    userIdInQuery:
      name: user
      in: query
      required: true
      schema:
        type: string
        format: uuid
      description: ユーザーUUID
tags:
  - name: room
    description: ルームAPI
  - name: ws
    description: WebsocketAPI
