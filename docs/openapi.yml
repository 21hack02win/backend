openapi: 3.1.0
info:
  title: nascalay
  version: '1.0'
  description: nascalay v1 API
  contact:
    name: 21hack02win
    url: 'https://github.com/21hack02win'
servers:
  - url: 'https://api.nascalay.trasta.dev'
paths:
  /rooms/new:
    post:
      summary: createRoom
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRoom'
      operationId: createRoom
      parameters: []
      description: 新規ルーム作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRoomRequest'
      tags:
        - room
  /rooms/join:
    post:
      summary: joinRoom
      operationId: joinRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      description: ルームに参加
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRoomRequest'
      tags:
        - room
  '/rooms/{roomId}':
    parameters:
      - $ref: '#/components/parameters/roomId'
    get:
      summary: getRoom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      operationId: getRoom
      description: ルーム情報を取得
      tags:
        - room
  /ws:
    get:
      summary: Your GET endpoint
      tags:
        - ws
      responses:
        '200':
          description: OK
      operationId: ws
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/WsEvent'
                body:
                  oneOf:
                    - $ref: '#/components/schemas/RoomNewMemberEvent'
                    - $ref: '#/components/schemas/RoomSetOptionEvent'
                    - $ref: '#/components/schemas/RoomUpdateOptionEvent'
                    - $ref: '#/components/schemas/GameStartEvent'
                    - $ref: '#/components/schemas/OdaiSendEvent'
                    - $ref: '#/components/schemas/DrawStartEvent'
                    - $ref: '#/components/schemas/DrawSendEvent'
                    - $ref: '#/components/schemas/AnswerStartEvent'
                    - $ref: '#/components/schemas/AnswerReadyEvent'
                    - $ref: '#/components/schemas/AnswerSendEvent'
                    - $ref: '#/components/schemas/ShowOdaiEvent'
                    - $ref: '#/components/schemas/ShowOdaiEvent'
                    - $ref: '#/components/schemas/ShowOdaiEvent'
                    - $ref: '#/components/schemas/ChangeHostEvent'
      description: |-
        Websocketを送受信する

        {
            type: tag,
            "body": {
                "------"
            }
        }
components:
  schemas:
    NewRoom:
      type: object
      description: 新規ルーム情報
      examples:
        - roomId: Nao340bzc0b23
          userId: 0fa5d740-0841-4b88-b7c8-34a68774c784
      properties:
        roomId:
          type: string
          description: ルームID
        userId:
          type: string
          description: ユーザーUUID
          format: uuid
          x-go-type: uuid.UUID
      required:
        - roomId
        - userId
    Room:
      title: Room
      type: object
      description: ルーム情報
      examples:
        - roomId: c3631f02-ff67-42b8-8775-18c47f52a678
          capacity: 0
          userId: 2c4a230c-5085-4924-a3e1-25fb4fc5965b
          hostId: 70e3fb2d-1cb6-4dbc-ab8d-fa7209aca5dd
          members:
            - name: xxxxx
              avatar: 5
              userId: xxxxxxxx-xxxx-xxxx-Nxxx-xxxxxxxxxxxx
      properties:
        roomId:
          type: string
        capacity:
          type: integer
        userId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        hostId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - roomId
        - capacity
        - userId
        - hostId
        - members
    User:
      title: User
      type: object
      examples:
        - name: xxxxx
          avatar: 5
          userId: xxxxxxxx-xxxx-xxxx-Nxxx-xxxxxxxxxxxx
      properties:
        userId:
          type: string
          format: uuid
          x-go-type: uuid.UUID
        name:
          type: string
        avatar:
          type: integer
      required:
        - userId
        - name
        - avatar
    NewRoomRequest:
      title: NewRoomRequest
      type: object
      examples:
        - name: xxxxx
          capacity: 4
      properties:
        name:
          type: string
        capacity:
          type: integer
      required:
        - name
        - capacity
    JoinRoomRequest:
      title: JoinRoomRequest
      type: object
      description: ルーム参加リクエスト
      examples:
        - roomId: Nao340bzc0b23
          name: xxxxx
          avatar: 5
      properties:
        roomId:
          type: string
        name:
          type: string
        avatar:
          type: integer
      required:
        - roomId
        - name
        - avatar
    WsEvent:
      title: WsEvent
      type: string
      description: Websocketイベントのリスト
      enum:
        - ROOM_NEW_MEMBER
        - ROOM_SET_OPTION
        - ROOM_UPDATE_OPTION
        - REQUEST_GAME_START
        - GAME_START
        - ODAI_READY
        - ODAI_CANCEL
        - ODAI_FINISH
        - ODAI_SEND
        - DRAW_START
        - DRAW_READY
        - DRAW_CANCEL
        - DRAW_FINISH
        - DRAW_SEND
        - ANSWER_START
        - ANSWER_READY
        - ANSWER_CANCEL
        - ANSWER_FINISH
        - ANSWER_SEND
        - SHOW_START
        - SHOW_NEXT
        - SHOW_ODAI
        - SHOW_CANVAS
        - SHOW_ANSWER
        - RETURN_ROOM
        - NEXT_ROOM
        - CHANGE_HOST
        - BREAK_ROOM
    NextShowStatus:
      title: NextWsEvent
      type: string
      description: 次のWebsocketイベントのリスト
      enum:
        - odai
        - canvas
        - answer
        - end
    RoomNewMemberEvent:
      title: RoomNewMemberEvent
      type: object
      description: 部屋に追加のメンバーが来たことを通知する (サーバー -> ルーム全員)
    RoomSetOptionEvent:
      title: RoomSetOptionEvent
      type: object
      description: ゲームのオプションを設定する (ホスト -> サーバー)
    RoomUpdateOptionEvent:
      title: RoomUpdateOptionEvent
      type: object
    GameStartEvent:
      title: GameStartEvent
      type: object
      description: ゲームの開始を通知する (サーバー -> ルーム全員)
      examples:
        - odaiHint: ねこのおばけ
          timeLimit: 40
      properties:
        odaiHint:
          type: string
        timeLimit:
          type: integer
      required:
        - odaiHint
        - timeLimit
    OdaiSendEvent:
      title: OdaiSendEvent
      type: object
      examples:
        - odai: ねこのおばけ
      description: お題を送信する (ルームの各員 -> サーバー)
      properties:
        odai:
          type: string
      required:
        - odai
    DrawStartEvent:
      title: DrawStartEvent
      type: object
      examples:
        - timeLimit: 40
          img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
          odai: ねこのおばけ
          drawPhaseNum: 3
          allDrawPhaseNum: 10
      description: キャンバス情報とお題を送信する (サーバー -> ルーム各員)
      properties:
        timeLimit:
          type: integer
        img:
          type: string
        odai:
          type: string
        drawPhaseNum:
          type: integer
        allDrawPhaseNum:
          type: number
      required:
        - timeLimit
        - img
        - odai
        - drawPhaseNum
        - allDrawPhaseNum
    DrawSendEvent:
      title: DrawSendEvent
      type: object
      examples:
        - img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
      description: |-
        絵を送信する (ルームの各員 -> サーバー)

        -> (DRAWフェーズが終わってなかったら) また，DRAW_START が飛んでくる
      properties:
        img:
          type: string
      required:
        - img
    AnswerStartEvent:
      title: AnswerStartEvent
      type: object
      description: 絵が飛んできて，回答する (サーバー -> ルーム各員)
      examples:
        - img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...
      properties:
        img:
          type: string
      required:
        - img
    AnswerReadyEvent:
      title: AnswerReadyEvent
      type: object
      description: 回答の入力が完了していることを通知する (ルームの各員 -> サーバー)
      examples:
        - answer: とらのおばけ
      properties:
        answer:
          type: string
      required:
        - answer
    AnswerSendEvent:
      title: AnswerSendEvent
      type: object
      description: 回答を送信する (ルームの各員 -> サーバー)
      examples:
        - answer: ねこのおばけ
      properties:
        answer:
          type: string
      required:
        - answer
    ShowOdaiEvent:
      title: ShowOdaiEvent
      type: object
      description: 最初のお題を受信する (サーバー -> ルーム全員)
      examples:
        - odai: そうじきをかけるねこ
          next: odai
      properties:
        odai:
          type: string
        next:
          $ref: '#/components/schemas/NextShowStatus'
      required:
        - odai
        - next
    ShowCanvasEvent:
      title: ShowCanvasEvent
      type: object
      examples:
        - odai: そうじきをかけるねこ
          next: odai
      description: 次のキャンバスを受信する (サーバー -> ルーム全員)
      properties:
        img:
          type: string
        next:
          $ref: '#/components/schemas/NextShowStatus'
      required:
        - img
        - next
    ShowAnswerEvent:
      title: ShowAnswerEvent
      type: object
      description: 最後の回答を受信する (サーバー -> ルーム全員)
      examples:
        - odai: そうじきをかけるねこ
          next: odai
      properties:
        answer:
          type: string
        next:
          $ref: '#/components/schemas/NextShowStatus'
      required:
        - answer
        - next
    ChangeHostEvent:
      title: ShowAnswerEvent
      type: object
      description: 最後の回答を受信する (サーバー -> ルーム全員)
      examples:
        - hostId: xxxxxxxx-xxxx-xxxx-Nxxx-xxxxxxxxxxxx
      properties:
        hostId:
          type: string
          format: uuid
      required:
        - hostId
  parameters:
    roomId:
      name: roomId
      in: path
      required: true
      schema:
        type: string
      description: ルームID
tags:
  - name: room
    description: ルームAPI
  - name: ws
    description: WebsocketAPI
